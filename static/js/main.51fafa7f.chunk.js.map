{"version":3,"sources":["components/Address.jsx","components/ButtonNext.jsx","api/serviceApi.js","redux/actions/converter.js","hooks/http.hook.js","components/ButtonConvert.jsx","components/Ticket.jsx","components/InputFrom.jsx","components/InputTo.jsx","components/Preloader.jsx","components/Converter.jsx","redux/actions/listMoney.js","App.js","redux/reducers/converter.js","redux/reducers/listMoney.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Address","React","memo","className","placeholder","type","ButtonNext","converter","from","a","to","sum","request","config","api_key","data","minConvert","setConvertData","key","value","useHttp","useCallback","url","method","body","headers","JSON","stringify","fetch","response","json","ok","alert","ButtonConvert","dispatch","setPreloader","useDispatch","useSelector","onClick","tickerFrom","tickerTo","valueFrom","convert","payload","estimatedAmount","fetchConvertData","toLowerCase","width","height","viewBox","fill","xmlns","d","Ticket","ticket","setInput","setList","error","stop","setName","e","target","innerText","window","store","getState","prev","min","minAmount","ticker","toUpperCase","InputFrom","propsInput","useState","list","input","listMoney","result","useEffect","renderList","persist","name","replace","onChange","setAttribute","map","index","InputTo","valueTo","disabled","Preloader","Converter","loading","setListMoney","App","fetchListMoney","initialState","converterReducer","state","action","Object","keys","listReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51fafa7f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction AddressInner() {\r\n  return (\r\n    <div className=\"converter-block-address\">\r\n      <input placeholder=\"ETH address\" type=\"text\" className=\"input-address\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Address = React.memo(AddressInner)\r\n\r\nexport default Address\r\n","import React from 'react'\r\n\r\nfunction ButtonNextInner() {\r\n  return <button className=\"converter-next\">next</button>\r\n}\r\n\r\nconst ButtonNext = React.memo(ButtonNextInner)\r\n\r\nexport default ButtonNext\r\n","import config from '../config/config.json'\r\nexport const converter = async (from, to = 'BNBMAINNET', sum, request) => {\r\n  const data = await request(\r\n    `https://changenow.io/api/v1/exchange-amount/${sum}/${from}_${to}/?api_key=${config.api_key}`\r\n  )\r\n\r\n  return data\r\n}\r\n\r\nexport const minConvert = async (request, from, to = 'BNBMAINNET') => {\r\n  const data = await request(\r\n    `https://changenow.io/api/v1/min-amount/${from}_${to}`\r\n  )\r\n  return data\r\n}\r\n","import { converter } from '../../api/serviceApi'\r\n\r\nexport const setConvertData = (key, value) => {\r\n  return {\r\n    type: 'CONVERT_DATA',\r\n    [key]: value,\r\n  }\r\n}\r\n\r\nexport const setConvertResult = result => {\r\n  return {\r\n    type: 'CONVERT_RESULT',\r\n    payload: result,\r\n  }\r\n}\r\n\r\nexport const fetchConvertData = (from, to, sum, request) => async dispatch => {\r\n  dispatch(setConvertData('loading', true))\r\n  const convert = await converter(from, to, sum, request)\r\n  dispatch(setConvertResult(convert?.estimatedAmount))\r\n  dispatch(setConvertData('loading', false))\r\n}\r\n","import React from 'react'\r\n\r\nconst useHttp = () => {\r\n  const request = React.useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body)\r\n          headers['Content-Type'] = 'application/json'\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (!response.ok) {\r\n          return alert('Пара не активна!')\r\n        }\r\n\r\n        return data\r\n      } catch (e) {\r\n        throw e\r\n      }\r\n    },\r\n    []\r\n  )\r\n\r\n  return {\r\n    request,\r\n  }\r\n}\r\n\r\nexport default useHttp\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchConvertData, setConvertData } from '../redux/actions/converter'\r\nimport useHttp from '../hooks/http.hook'\r\n\r\nfunction ButtonConvertInner() {\r\n  const { request, setPreloader } = useHttp()\r\n  const dispatch = useDispatch()\r\n  const { converter } = useSelector(({ converter }) => ({\r\n    converter: converter,\r\n  }))\r\n\r\n  const clickConvert = () => {\r\n    if (!converter?.tickerFrom) {\r\n      return\r\n    } else if (!converter?.tickerTo) {\r\n      return\r\n    } else if (!converter?.valueFrom) {\r\n      return\r\n    } else if (converter?.valueFrom < converter?.minConvert) {\r\n      dispatch(setConvertData('result', '-'))\r\n      return\r\n    } else if (\r\n      converter?.tickerFrom === converter?.tickerTo ||\r\n      converter?.tickerTo === converter?.tickerFrom\r\n    ) {\r\n      dispatch(setConvertData('result', '-'))\r\n      dispatch(setConvertData('error', true))\r\n      return\r\n    }\r\n    dispatch(\r\n      fetchConvertData(\r\n        converter?.tickerFrom.toLowerCase(),\r\n        converter?.tickerTo.toLowerCase(),\r\n        converter?.valueFrom,\r\n        request,\r\n        setPreloader\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <button onClick={clickConvert} className=\"button-convert\">\r\n      <svg\r\n        width=\"16\"\r\n        height=\"22\"\r\n        viewBox=\"0 0 16 22\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M9.26228 2.33243L11.3097 4.37983L0.523856 4.37983L0.524061 6.83013L11.3097 6.83013L9.2622 8.87758L10.9948 10.6101L16.0001 5.60493L10.9949 0.599853L9.26228 2.33243Z\" />\r\n        <path d=\"M6.73777 19.365L4.69033 17.3176L15.7312 17.3176L15.731 14.8673L4.69036 14.8673L6.73785 12.8199L5.00527 11.0873L-2.3107e-05 16.0925L5.00516 21.0976L6.73777 19.365Z\" />\r\n      </svg>\r\n    </button>\r\n  )\r\n}\r\n\r\nconst ButtonConvert = React.memo(ButtonConvertInner)\r\n\r\nexport default ButtonConvert\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { minConvert } from '../api/serviceApi'\r\nimport { setConvertData } from '../redux/actions/converter'\r\nimport useHttp from '../hooks/http.hook'\r\n\r\nfunction TicketInner({ ticket, setInput, type, setList }) {\r\n  const { request } = useHttp()\r\n  const dispatch = useDispatch()\r\n\r\n  const error = () => {\r\n    dispatch(setConvertData('error', true))\r\n    dispatch(setConvertData('result', '-'))\r\n  }\r\n\r\n  let stop = false\r\n  const setName = async e => {\r\n    const value = e.target.innerText\r\n    const key = type === 'from' ? 'tickerFrom' : 'tickerTo'\r\n\r\n    dispatch(setConvertData(key, value))\r\n    setList(false)\r\n\r\n    const converter = window.store.getState().converter\r\n\r\n    if (converter?.tickerTo === converter?.tickerFrom) {\r\n      error()\r\n      stop = true\r\n    } else if (converter?.tickerFrom === converter?.tickerTo) {\r\n      error()\r\n      stop = true\r\n    } else {\r\n      stop = false\r\n      dispatch(setConvertData('result', 0))\r\n    }\r\n\r\n    setInput(prev => {\r\n      return {\r\n        ...prev,\r\n        [key]: value,\r\n      }\r\n    })\r\n\r\n    if (converter?.tickerFrom && converter?.tickerTo) {\r\n      if (stop === true) return\r\n      dispatch(setConvertData('error', false))\r\n      dispatch(setConvertData('loading', true))\r\n      const min = await minConvert(\r\n        request,\r\n        converter?.tickerFrom,\r\n        converter?.tickerTo\r\n      )\r\n\r\n      dispatch(setConvertData('minConvert', min?.minAmount))\r\n      if (!converter?.valueFrom || converter?.valueFrom === '0') {\r\n        dispatch(setConvertData('valueFrom', min?.minAmount))\r\n      }\r\n\r\n      dispatch(setConvertData('loading', false))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={setName} className=\"converter-ticket\">\r\n      {ticket?.ticker.toUpperCase()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Ticket = React.memo(TicketInner)\r\n\r\nexport default Ticket\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setConvertData } from '../redux/actions/converter'\r\nimport Ticket from './Ticket'\r\n\r\nfunction InputFromInner({ propsInput }) {\r\n  const dispatch = useDispatch()\r\n  const [list, setList] = React.useState(false)\r\n  const [input, setInput] = React.useState({\r\n    valueFrom: '',\r\n    tickerFrom: '',\r\n  })\r\n\r\n  const {\r\n    listMoney,\r\n    valueFrom,\r\n    minConvert,\r\n    tickerTo,\r\n    tickerFrom,\r\n    result,\r\n    error,\r\n  } = propsInput\r\n\r\n  const errors = () => {\r\n    if (result === '-' && !error) {\r\n      return (\r\n        <span className=\"error-min\">\r\n          {'Минимальная сумма конвертации: '}\r\n          <span className=\"error-min__value\">\r\n            {minConvert || 'пара не активна'}\r\n          </span>\r\n        </span>\r\n      )\r\n    } else if (error && result === '-') {\r\n      return <span className=\"error-min\">Выберите разные валюты</span>\r\n    } else if (!tickerFrom) {\r\n      return <span className=\"error-min\">Выберите конвертируемую валюту</span>\r\n    } else if (!tickerTo) {\r\n      return <span className=\"error-min\">Выберите итоговую валюту</span>\r\n    } else if (!valueFrom || valueFrom === '0') {\r\n      return <span className=\"error-min\">Введите сумму конвертации</span>\r\n    } else {\r\n      return <span className=\"success\">Нажмите на кнопку конвертации</span>\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (valueFrom !== input.valueFrom) {\r\n      setInput({\r\n        ...input,\r\n        valueFrom: valueFrom,\r\n      })\r\n    }\r\n  }, [valueFrom, input])\r\n\r\n  const renderList = e => {\r\n    e.persist()\r\n    if (e.target.name === 'tickerFrom') {\r\n      e.target.value ? setList(true) : setList(false)\r\n    }\r\n    const value = e.target.value.replace(/[^\\d., '']/g, '').toUpperCase()\r\n    setInput(prev => {\r\n      return {\r\n        ...prev,\r\n        [e.target.name]: value,\r\n      }\r\n    })\r\n    dispatch(setConvertData(e.target.name, value))\r\n  }\r\n\r\n  return (\r\n    <div className=\"converter-block\">\r\n      <input\r\n        name=\"valueFrom\"\r\n        className=\"converter-input\"\r\n        onChange={renderList}\r\n        value={input.valueFrom}\r\n        placeholder=\"0\"\r\n        type=\"text\"\r\n      />\r\n\r\n      <input\r\n        placeholder={'BTC'}\r\n        value={input.tickerFrom}\r\n        onChange={renderList}\r\n        onClick={e => {\r\n          e.target.setAttribute('disabled', true)\r\n          setList(!list)\r\n        }}\r\n        type=\"text\"\r\n        name=\"tickerFrom\"\r\n      />\r\n      {errors()}\r\n\r\n      <div className={list ? 'converter-list' : 'converter-list none'}>\r\n        {listMoney.map((ticket, index) => (\r\n          <Ticket\r\n            key={`${ticket.ticker}_${index}`}\r\n            ticket={ticket}\r\n            setInput={setInput}\r\n            type={'from'}\r\n            setList={setList}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst InputFrom = React.memo(InputFromInner)\r\n\r\nexport default InputFrom\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setConvertData } from '../redux/actions/converter'\r\nimport Ticket from './Ticket'\r\n\r\nfunction InputToInner({ result, listMoney }) {\r\n  const dispatch = useDispatch()\r\n  const [list, setList] = React.useState(false)\r\n  const [input, setInput] = React.useState({\r\n    valueTo: '',\r\n    tickerTo: '',\r\n  })\r\n\r\n  const renderList = e => {\r\n    e.persist()\r\n    if (e.target.name === 'tickerTo') {\r\n      e.target.value ? setList(true) : setList(false)\r\n    }\r\n\r\n    dispatch(setConvertData(e.target.name, e.target.value))\r\n\r\n    setInput(prev => {\r\n      return {\r\n        ...prev,\r\n        [e.target.name]: e.target.value,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"converter-block\">\r\n      <input\r\n        name=\"valueTo\"\r\n        onChange={renderList}\r\n        value={result}\r\n        placeholder=\"0\"\r\n        type=\"text\"\r\n        disabled\r\n      />\r\n      <input\r\n        placeholder={'BNBMAINNET'}\r\n        value={input.tickerTo}\r\n        onChange={renderList}\r\n        onClick={e => {\r\n          e.target.setAttribute('disabled', true)\r\n          setList(!list)\r\n        }}\r\n        type=\"text\"\r\n        name=\"tickerTo\"\r\n      />\r\n\r\n      <div className={list ? 'converter-list' : 'converter-list none'}>\r\n        {listMoney.map((ticket, index) => (\r\n          <Ticket\r\n            key={`${ticket.ticker}_${index}`}\r\n            ticket={ticket}\r\n            setInput={setInput}\r\n            type={'to'}\r\n            setList={setList}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst InputTo = React.memo(InputToInner)\r\n\r\nexport default InputTo\r\n","import React from 'react'\r\n\r\nfunction Preloader() {\r\n  return (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react'\r\n\r\nimport Address from './Address'\r\nimport ButtonNext from './ButtonNext'\r\nimport ButtonConvert from './ButtonConvert'\r\nimport InputFrom from './InputFrom'\r\nimport InputTo from './InputTo'\r\nimport Preloader from './Preloader'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Converter() {\r\n  const propsInput = useSelector(({ listMoney, converter }) => ({\r\n    loading: converter.loading,\r\n    listMoney: listMoney.listMoney,\r\n    valueFrom: converter.valueFrom,\r\n    minConvert: converter.minConvert,\r\n    tickerTo: converter.tickerTo,\r\n    tickerFrom: converter.tickerFrom,\r\n    result: converter.result,\r\n    error: converter.error,\r\n  }))\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <div className=\"converter-blocks\">\r\n        <InputFrom propsInput={propsInput} />\r\n        <ButtonConvert />\r\n        <InputTo result={propsInput.result} listMoney={propsInput.listMoney} />\r\n      </div>\r\n\r\n      <div className=\"converter-blocks\">\r\n        <Address />\r\n        <ButtonNext />\r\n      </div>\r\n      <div className=\"converter-preloader\">\r\n        {propsInput.loading ? <Preloader /> : ''}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Converter\r\n","import { setConvertData } from './converter'\r\n\r\nexport const setListMoney = listMoney => {\r\n  return {\r\n    type: 'GET_LIST_MONEY',\r\n    payload: listMoney,\r\n  }\r\n}\r\n\r\nexport const fetchListMoney = request => async dispatch => {\r\n  dispatch(setConvertData('loading', true))\r\n  const listMoney = await request(\r\n    'https://changenow.io/api/v1/currencies?active=true',\r\n    'GET'\r\n  )\r\n  dispatch(setListMoney(listMoney))\r\n  dispatch(setConvertData('loading', false))\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Converter from './components/Converter'\r\nimport { fetchListMoney } from './redux/actions/listMoney'\r\nimport useHttp from './hooks/http.hook'\r\n\r\nfunction App() {\r\n  const { request } = useHttp()\r\n  const dispatch = useDispatch()\r\n  React.useEffect(() => {\r\n    dispatch(fetchListMoney(request))\r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Converter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  result: 0,\r\n  error: false,\r\n  loading: false,\r\n  minConvert: 0,\r\n  valueFrom: '',\r\n}\r\n\r\nconst converterReducer = (state = initialState, action) => {\r\n  const key = Object.keys(action)[1]\r\n  const data = action[key]\r\n  switch (action.type) {\r\n    case 'CONVERT_DATA':\r\n      return {\r\n        ...state,\r\n        [key]: data,\r\n      }\r\n\r\n    case 'CONVERT_RESULT':\r\n      return {\r\n        ...state,\r\n        result: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default converterReducer\r\n","const initialState = {\r\n  listMoney: [],\r\n}\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_LIST_MONEY':\r\n      return {\r\n        ...state,\r\n        listMoney: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default listReducer\r\n","import { combineReducers } from 'redux'\r\nimport converterReducer from './converter'\r\nimport listReducer from './listMoney'\r\nexport const rootReducer = combineReducers({\r\n  listMoney: listReducer,\r\n  converter: converterReducer,\r\n})\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/index.scss'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}